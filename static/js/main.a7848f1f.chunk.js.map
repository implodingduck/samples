{"version":3,"sources":["components/Navigation.js","components/SearchBar.js","components/DelayRender.js","components/Services.js","components/SLAestimationCategory.js","components/SLAestimationTier.js","components/SLAestimation.js","components/ServiceAlert.js","components/OutsideClickHandle.js","components/TiersDropDownMenu.js","components/MainPanel.js","components/Home.js","App.js","registerServiceWorker.js","index.js"],"names":["Navigation","props","this","visible","contents","renderCategoriesTable","dataSource","selectedCategory","onSelectCategory","serviceCategories","selectCategory","className","aria-labelledby","map","serviceCategory","key","categoryName","onClick","Component","SearchBar","id","placeholder","onKeyUp","ev","onTextSearchEnter","currentTarget","value","type","onClearSearch","DelayRender","state","hidden","setTimeout","setState","waitBeforeShow","src","children","Services","length","renderServicesTable","onSelectService","services","selectService","service","name","title","sla","imageFile","notes","href","slaAgreementUrl","target","SLAestimationCategory","catServices","renderSLACategoryTable","tierName","onDeleteEstimationCategory","onDeleteEstimationService","onExpandCollapseEstimationCategory","deleteEstimationCategory","deleteEstimationService","expandCollapseEstimationCategory","svc","SLAestimationTier","tier","tiers","find","t","pairedRegion","tierServices","catContents","i","tierSla","calculateTierTotal","downTime","calculateDownTime","categories","filter","o","catContent","renderSLATierTable","push","onExpandCollapseEstimationTier","getSelectedRegionOption","onChange","onSelectRegion","onDeleteEstimationTier","SLAestimation","slaEstimationData","tierContents","tierContent","renderSlaEstimationTier","calculateTierSla","onSelectTierRegion","onExpandAll","onCollapseAll","onDeleteAll","slaTotal","slaTotalMultiRegion","downTimeMultiRegion","deleteEstimationTier","expandCollapseEstimationTier","selectRegion","ServiceAlert","OutsideClickHandle","setWrapperRef","bind","handleClickOutside","document","addEventListener","removeEventListener","node","wrapperRef","event","contains","onClickOutside","ref","TiersDropDownMenu","evt","content","parentElement","onChangeTier","onDeleteTier","onAddTier","objRef","outsideClicked","displayHideContent","currentTier","changeTier","tooltip","deleteTier","maxLength","addTier","MainPanel","slaEstimation","JSON","parse","localStorage","getItem","getResetTiers","calculateSla","calculateSlaMultiRegion","selectedServices","addServiceClass","loading","searchTextEnter","clearSearch","deleteAll","expandAll","collapseAll","setTier","selectTierRegion","displayServices","allservices","textValue","toLowerCase","includes","e","total","x","regionOption","undefined","Math","round","Number","EPSILON","eventInfo","selectedService","setItem","stringify","updownimage","divPanel","category","filteredEstimation","innerHTML","trim","concat","window","confirm","filteredTiers","options","selectedIndex","index","findIndex","totalsPanel","populateServiceCategoryData","renderMainPanel","a","data","sladata","reduce","y","Home","displayName","App","exact","path","component","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","render","basename","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a7848f1f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Styles.css';\n\nexport class Navigation extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    static renderCategoriesTable(serviceCategories, selectedCategory, selectCategory) {\n        return (\n            <table className='table table-striped' aria-labelledby=\"tabelLabel\">\n                <tbody>\n                    {serviceCategories.map(serviceCategory =>\n                        <tr key={serviceCategory.categoryName}>\n                            <td className={selectedCategory === serviceCategory.categoryName ? \"selectedcategorymenu-item\" : \"categorymenu-item\"}\n                                onClick={() => selectCategory(serviceCategory)}>{serviceCategory.categoryName}</td>\n                        </tr>\n                    )}\n                </tbody>\n            </table>\n        );\n    }\n\n    render() {\n        if (this.props.visible) {\n            let contents = Navigation.renderCategoriesTable(this.props.dataSource, this.props.selectedCategory, this.props.onSelectCategory);\n            return (\n                <div>\n                    {contents}\n                </div>\n            );\n        }\n        else {\n            return (<div></div>)\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './Styles.css';\n\nexport class SearchBar extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"service-search-container\">\n                <input id=\"searchBox\" className=\"service-search-box\" placeholder=\"Search services\" onKeyUp={ev => this.props.onTextSearchEnter(ev.currentTarget.value)}></input>\n                <button id=\"clearSearch\" className=\"clear-search\" type=\"submit\" onClick={ev => this.props.onClearSearch(ev)} >x</button>\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport './Styles.css';\nimport PropTypes from 'prop-types';\n\nexport class DelayRender extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = { hidden: true };\n    }\n\n    componentDidMount() {\n        setTimeout(() => {\n            this.setState({ hidden: false });\n        }, this.props.waitBeforeShow);\n    }\n\n    render() {\n        return this.state.hidden ? <p><img src=\"images/load.gif\"></img></p> : this.props.children;\n    }\n}\n\nDelayRender.propTypes = { waitBeforeShow: PropTypes.number.isRequired };\n\nexport default DelayRender;","import React, { Component } from 'react';\nimport { DelayRender } from './DelayRender';\nimport './Styles.css';\n\nexport class Services extends Component {\n\n    static renderServicesTable(services, selectService) {\n        return (\n            <div className=\"services-table\">\n                {services.map(service =>\n                    <div key={service.name} id={service.name} className=\"service-layout\" onClick={ev => selectService(ev, service.name)} title={\"SLA: \" + service.sla + \" %\"}>\n                        <div className=\"service-content-left\"><img src={\"images/\" + service.imageFile}></img></div>\n                        <div className=\"service-content-right\"><p>{service.name}</p></div>\n                        <div className=\"service-notes\">{service.notes}</div>\n                        <div className=\"service-hl\" ><a id=\"service-hl\" href={service.slaAgreementUrl} target=\"_blank\">SLA, legal info</a></div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.dataSource.length > 0) {\n            let contents = Services.renderServicesTable(this.props.dataSource, this.props.onSelectService);\n\n            return (\n                <DelayRender waitBeforeShow={1500}>\n                    <div>\n                        {contents}\n                    </div>\n                </DelayRender>\n            );\n        }\n        else {\n            return (<DelayRender waitBeforeShow={1500}><div><p className=\"no-results\">Sorry, there are no products that match your search</p></div></DelayRender>);\n        }\n    }\n}\n","import React, { Component } from 'react';\nimport './Styles.css';\n\nexport class SLAestimationCategory extends Component {\n\n    static renderSLACategoryTable(tierName, categoryName, catServices, deleteEstimationCategory, deleteEstimationService, expandCollapseEstimationCategory)\n    {\n        return (\n            <div id={tierName}>\n                <div className=\"estimation-head\" id={categoryName}>\n                    <div className=\"estimation-head-ec-arrow\"><button className=\"down-arrow\" onClick={ev => expandCollapseEstimationCategory(ev)} /></div>\n                    <div className=\"estimation-head-title\">{categoryName} Category</div>\n                    <div className=\"estimation-head-delete\" onClick={ev => deleteEstimationCategory(ev)}><img src=\"images/delete.png\" title=\"Delete the service category\" /></div>\n                </div>\n                <br />\n                <div className=\"div-show\">\n                    {catServices.map(svc =>\n                        <div id={svc.id}>\n                            <div className=\"estimation-spacer\">\n                            </div>\n                            <div className=\"estimation-head\" id={svc.name}>\n                                <div className=\"estimation-head-ec-arrow\"></div>\n                                <div className=\"estimation-head-title\"></div>\n                                <div className=\"estimation-head-delete\" onClick={ev => deleteEstimationService(ev)}><img src=\"images/delete.png\" title=\"Delete the service\" /></div>\n                            </div>\n                            <div className=\"estimation-layout\">\n                                <div className=\"estimation-service\">\n                                    <div className=\"estimation-service-icon\"><img src={\"images/\" + svc.imageFile}></img></div>\n                                    <div className=\"estimation-service-name\"><p>{svc.name}</p></div>\n                                    <div className=\"estimation-sla\"><p>SLA: {svc.sla} %</p></div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.catServices.length > 0) {\n            let contents = SLAestimationCategory.renderSLACategoryTable(this.props.tierName, this.props.categoryName, this.props.catServices,\n                this.props.onDeleteEstimationCategory, this.props.onDeleteEstimationService , this.props.onExpandCollapseEstimationCategory);\n\n            return (\n                <div>\n                    <br />\n                    {contents}\n                </div>\n            );\n        }\n\n        return (<div></div>);\n    }\n}\n","import React, { Component } from 'react';\nimport { SLAestimationCategory } from './SLAestimationCategory';\nimport './Styles.css';\n\nexport class SLAestimationTier extends Component {\n\n    static renderSLATierTable(tierName, categoryName, catServices, deleteEstimationCategory, deleteEstimationService,\n        expandCollapseEstimationCategory) {\n\n        return (\n            <div>\n                <div className=\"div-show\">\n                    <SLAestimationCategory tierName={tierName} categoryName={categoryName} catServices={catServices}\n                        onDeleteEstimationCategory={deleteEstimationCategory}\n                        onDeleteEstimationService={deleteEstimationService}\n                        onExpandCollapseEstimationCategory={expandCollapseEstimationCategory}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    getSelectedRegionOption(tier) {\n        return this.props.tiers.find(t => t.name === tier).pairedRegion;\n    }\n\n\n    render() {\n        if (this.props.tierServices.length > 0) {\n\n            const tierSla = this.props.calculateTierTotal(this.props.tierName);\n            const downTime = this.props.calculateDownTime(tierSla);\n\n            const categories = this.props.categories;\n            var catContents = [];\n\n            for (var i = 0; i < categories.length; i++) {\n                var catServices = this.props.tierServices\n                    .filter(o => o.service.categoryName === categories[i])\n                    .map(svc => svc.service);\n\n                if (catServices.length > 0) {\n                    let catContent = SLAestimationTier.renderSLATierTable(this.props.tierName, categories[i], catServices,\n                        this.props.onDeleteEstimationCategory, this.props.onDeleteEstimationService, this.props.onExpandCollapseEstimationCategory);\n\n                    catContents.push(catContent);\n                }\n            }\n\n            return (\n                <div>\n                    <div className=\"tier-head \">\n                        <div className=\"estimation-head-ec-arrow\"><button className=\"down-arrow\" onClick={ev => this.props.onExpandCollapseEstimationTier(ev)} /></div>\n                        <div className=\"tier-head-title-left\">{this.props.tierName} Tier</div>\n                        <div className=\"tier-head-region\">\n                            <div className={this.props.tierName === \"Global\" ? \"regions-option-hidden\" : \"region-div-left\"}>Deploy to Paired Azure Regions: </div>\n                            <div className=\"region-div-right\">\n                                <select className={this.props.tierName === \"Global\" ? \"regions-option-hidden\" : \"tier-option\"} id={this.props.tierName} value={this.getSelectedRegionOption(this.props.tierName)}  onChange={ev => this.props.onSelectRegion(ev)} >\n                                    <option value=\"no\">No</option>\n                                    <option value=\"yes\">Yes</option>\n                                </select>\n                            </div>\n                        </div>\n                        <div className=\"estimation-head-delete\" id={this.props.tierName} onClick={ev => this.props.onDeleteEstimationTier(ev)}><img src=\"images/delete.png\" title=\"Delete the Tier\" /></div>\n                    </div>\n                    <br />\n                    {catContents}\n                    <div className=\"div-show\">\n                        <br />\n                        <div className=\"estimation-totals-panel\">\n                            <br />\n                            <div className=\"tier-estimation-total-label\"><p>{this.props.tierName} Tier Composite SLA: {tierSla} %</p></div>\n                            <div className=\"tier-estimation-total-label\"><p>Maximum acceptable downtime in minutes /Month: {downTime} </p></div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (<div></div>);\n    }\n}\n","import React, { Component } from 'react';\nimport { SLAestimationTier } from './SLAestimationTier';\nimport './Styles.css';\n\nexport class SLAestimation extends Component {\n\n    static renderSlaEstimationTier(tier, services, tiers, categories, deleteEstimationTier, expandCollapseEstimationTier,\n        deleteEstimationCategory, deleteEstimationService, expandCollapseEstimationCategory, calculateTierSla, calculateDownTime, selectRegion) {\n        return (\n            <div key={tier}>\n                <SLAestimationTier tierName={tier} tierServices={services}\n                    tiers={tiers} categories={categories}\n                    onDeleteEstimationCategory={deleteEstimationCategory}\n                    onDeleteEstimationService={deleteEstimationService}\n                    onExpandCollapseEstimationCategory={expandCollapseEstimationCategory}\n                    onDeleteEstimationTier={deleteEstimationTier}\n                    onExpandCollapseEstimationTier={expandCollapseEstimationTier}\n                    onSelectRegion={selectRegion}\n                    calculateTierTotal={calculateTierSla}\n                    calculateDownTime={calculateDownTime}\n                />\n            </div>\n        );\n    }\n\n    render() {\n        if (this.props.slaEstimationData.length > 0) {\n            const tiers = this.props.tiers.map(t => t.name);\n            var tierContents = [];\n\n            for (var i = 0; i < tiers.length; i++) {\n                var tierServices = this.props.slaEstimationData\n                    .filter(o => o.tier === tiers[i])\n                    .map(svc => svc.key);\n\n                if (tierServices.length > 0) {\n                    var tierContent = SLAestimation.renderSlaEstimationTier(tiers[i], tierServices,\n                        this.props.tiers,\n                        this.props.categories,\n                        this.props.onDeleteEstimationTier,\n                        this.props.onExpandCollapseEstimationTier,\n                        this.props.onDeleteEstimationCategory,\n                        this.props.onDeleteEstimationService,\n                        this.props.onExpandCollapseEstimationCategory,\n                        this.props.calculateTierSla,\n                        this.props.calculateDownTime,\n                        this.props.onSelectTierRegion);\n\n                    tierContents.push(tierContent);\n                }\n            }\n\n            return (\n                <div>\n                    <div className=\"estimation-spacer\">\n                        <div className=\"estimation-expand-all\" onClick={ev => this.props.onExpandAll(ev)}></div>\n                        <div className=\"estimation-collapse-all\" onClick={ev => this.props.onCollapseAll(ev)}></div>\n                        <div className=\"estimation-delete-all\" onClick={this.props.onDeleteAll}></div>\n                    </div>\n                    <br />\n                    <div id=\"estimationPanel\">\n                        {tierContents}\n                    </div>\n                    <div>\n                        <br />\n                        <div className=\"estimation-totals-panel\">\n                            <br />\n                            <div className=\"estimation-total-label-underline\">Single Region Deployment</div>\n                            <div className=\"estimation-total-label\"><p>Composite SLA: {this.props.slaTotal} %</p></div>\n                            <div className=\"estimation-total-label\"><p>Maximum acceptable downtime in minutes /Month: {this.props.downTime} </p></div>\n                            <br />\n                            <div className=\"estimation-total-label-underline\">Multi region Deployment</div>\n                            <div className=\"estimation-total-label\"><p>Composite SLA: {this.props.slaTotalMultiRegion} %</p></div>\n                            <div className=\"estimation-total-label\"><p>Maximum acceptable downtime in minutes /Month: {this.props.downTimeMultiRegion} </p></div>\n                            <br />\n                            <div className=\"estimation-notes\">Some services have special considerations when designing applications for availability and service level guarantees.  Review the Microsoft Azure Service Level Agreements documentation for details.</div>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        return (<div></div>);\n    }\n}\n","import React, { Component } from 'react';\n\nexport class ServiceAlert extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n\n        return (\n            <div id=\"serviceAlert\" className={this.props.className}>\n                Adding Service...\n            </div>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport class OutsideClickHandle extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setWrapperRef = this.setWrapperRef.bind(this);\n        this.handleClickOutside = this.handleClickOutside.bind(this);\n    }\n\n    componentDidMount() {\n        document.addEventListener('mousedown', this.handleClickOutside);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('mousedown', this.handleClickOutside);\n    }\n\n    setWrapperRef(node) {\n        this.wrapperRef = node;\n    }\n\n    handleClickOutside(event) {\n        if (this.wrapperRef && !this.wrapperRef.contains(event.target)) {\n            this.props.onClickOutside(this.wrapperRef);\n        }\n    }\n\n    render() {\n        return <div ref={this.setWrapperRef}>{this.props.children}</div>;\n    }\n}\n\nOutsideClickHandle.propTypes = {\n    children: PropTypes.element.isRequired,\n};\n","import React, { Component } from 'react';\nimport { OutsideClickHandle } from './OutsideClickHandle';\nimport './Styles.css';\n\nexport class TiersDropDownMenu extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    displayHideContent(evt) {\n        const content = evt.currentTarget.parentElement.children[1];\n\n        content.className = content.className === \"dropdown-content\" ? \"dropdown-content-show\" : \"dropdown-content\";\n    }\n\n    changeTier(ev) {\n        ev.currentTarget.parentElement.parentElement.className = \"dropdown-content\";\n        this.props.onChangeTier(ev);\n    }\n\n    deleteTier(ev) {\n        this.props.onDeleteTier(ev);\n    }\n\n    addTier(ev) {\n        this.props.onAddTier(ev);\n    }\n\n    outsideClicked(objRef) {\n        const content = objRef.children[0].children[1].children[1];\n\n        content.className = \"dropdown-content\";\n    }\n\n    render() {\n        return (\n            <OutsideClickHandle onClickOutside={ref => this.outsideClicked(ref)}>\n                <div className=\"dropdown-container\">\n                    <div className=\"tier-label\">\n                        Tier\n                    </div>\n                    <div className=\"dropdown\">\n                        <div className=\"dropdown-header\" onClick={ev => this.displayHideContent(ev)}>\n                            <div className=\"dropdown-header-text\">{this.props.currentTier}</div>\n                            <div className=\"dropdown-header-arrow\"></div>\n                        </div>\n                        <div className=\"dropdown-content \">\n                            {this.props.tiers.map((tier, i ) =>\n                                <div className=\"dropdown-item\" key={i}>\n                                    <div className=\"dropdown-item-text\" onClick={ev => this.changeTier(ev)}>{tier.name}</div>\n                                    <div className=\"delete-tier\" id={tier.name} tooltip=\"Delete Tier\" title=\"delete tier\" onClick={ev => this.deleteTier(ev)}></div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                    <div className=\"new-tier\">\n                        <input type=\"text\" maxLength=\"20\" id=\"newTier\" className=\"new-tier-box\" />\n                    </div>\n                    <div className=\"add-tier\">\n                        <button className=\"add-tier\" type=\"submit\" onClick={ev => this.addTier(ev)} title=\"Add new tier\" >+</button>\n                    </div>\n                </div>\n            </OutsideClickHandle>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport { Navigation } from './Navigation';\nimport { SearchBar } from './SearchBar';\nimport { Services } from './Services';\nimport { SLAestimation } from './SLAestimation';\nimport { ServiceAlert } from './ServiceAlert';\nimport { TiersDropDownMenu } from './TiersDropDownMenu';\nimport sladata from './SLA_data.json';\n\nexport class MainPanel extends Component {\n\n    constructor(props) {\n        super(props);\n\n        const slaEstimation = JSON.parse(localStorage.getItem('slaEstimation')) || [];\n        const categories = [];\n\n        const tiers = JSON.parse(localStorage.getItem('tiers')) || this.getResetTiers();\n        const slaTotal = this.calculateSla(slaEstimation);\n        const slaTotalMultiRegion = this.calculateSlaMultiRegion(slaEstimation, tiers)\n        const downTime = this.calculateDownTime(slaTotal)\n        const downTimeMultiRegion = this.calculateDownTime(slaTotalMultiRegion)\n\n\n        this.state = {\n            serviceCategories: [], selectedServices: [], selectedCategory: \"\",\n            categories: categories,\n            tiers: tiers,\n            slaEstimation: slaEstimation,\n            slaTotal: slaTotal,\n            slaTotalMultiRegion: slaTotalMultiRegion,\n            downTime: downTime,\n            downTimeMultiRegion: downTimeMultiRegion,\n            addServiceClass: \"addservice-alert-hide\",\n            currentTier: tiers[0].name,\n            filter: false, loading: true\n        };\n        this.selectCategory = this.selectCategory.bind(this);\n        this.selectService = this.selectService.bind(this);\n        this.searchTextEnter = this.searchTextEnter.bind(this);\n        this.clearSearch = this.clearSearch.bind(this);\n        this.deleteEstimationCategory = this.deleteEstimationCategory.bind(this);\n        this.deleteEstimationService = this.deleteEstimationService.bind(this);\n        this.expandCollapseEstimationCategory = this.expandCollapseEstimationCategory.bind(this);\n        this.deleteEstimationTier = this.deleteEstimationTier.bind(this);\n        this.expandCollapseEstimationTier = this.expandCollapseEstimationTier.bind(this);\n        this.deleteAll = this.deleteAll.bind(this);\n        this.expandAll = this.expandAll.bind(this);\n        this.collapseAll = this.collapseAll.bind(this);\n        this.setTier = this.setTier.bind(this);\n        this.addTier = this.addTier.bind(this);\n        this.deleteTier = this.deleteTier.bind(this);\n        this.selectTierRegion = this.selectTierRegion.bind(this);\n        this.calculateTierSla = this.calculateTierSla.bind(this);\n    }\n\n    getResetTiers() {\n        return [\n            { name: 'Global', pairedRegion: 'no' },\n            { name: 'Web', pairedRegion: 'no' },\n            { name: 'Api', pairedRegion: 'no' },\n            { name: 'Data', pairedRegion: 'no' },\n            { name: 'Security', pairedRegion: 'no' },\n            { name: 'Network', pairedRegion: 'no' },\n\n        ]\n    }\n\n    selectCategory(selectedCategory) {\n        this.setState({\n            selectedServices: selectedCategory.services,\n            selectedCategory: selectedCategory.categoryName\n        });\n    }\n\n    clearSearch(evt) {\n        evt.currentTarget.parentElement.children[0].value = \"\";\n\n        let displayServices = this.state.allservices.filter(o => o.categoryName === this.state.selectedCategory);\n\n        this.setState({\n            selectedServices: displayServices,\n            filter: false\n        });\n    }\n\n    searchTextEnter(textValue) {\n        let displayServices = [];\n        let filter = false;\n\n        if (textValue.length > 0) {\n            displayServices = this.state.allservices.filter(o => o.name.toLowerCase().includes(textValue.toLowerCase()));\n            filter = true;\n        }\n        else {\n            displayServices = this.state.allservices.filter(o => o.categoryName === this.state.selectedCategory);\n        }\n\n        this.setState({\n            selectedServices: displayServices,\n            filter: filter\n        });\n    }\n\n    calculateTierSla(tier) {\n        const slaEstimation = [...this.state.slaEstimation];\n\n        return this.calculateSla(slaEstimation.filter(e => e.tier === tier));\n    }\n\n    calculateSlaMultiRegion(slaEstimation, tiers) {\n        if (slaEstimation.length == 0)\n            return 0;\n\n        let total = 1;\n        let services = slaEstimation.map(x => x.key);\n\n        for (var i = 0; i < services.length; i++) {\n            const tierName = services[i].tier;\n            const tier = tiers.find(t => t.name == tierName)\n            var regionOption = 'no';\n\n            if(tier != undefined)\n                regionOption = tier.pairedRegion;\n\n            const sla = services[i].service.sla/100;\n            const value = regionOption === 'yes' ? 1-((1-sla) * (1-sla)) : sla;\n\n            total = total * value;\n        }\n\n        return Math.round(((total * 100) + Number.EPSILON) * 1000) / 1000;\n    }\n\n    calculateSla(slaEstimation) {\n\n        if (slaEstimation.length == 0)\n            return 0;\n\n        if (slaEstimation.length == 1)\n            return slaEstimation[0].key.service.sla;\n\n        let total = 1;\n        let services = slaEstimation.map(x => x.key);\n\n        for (var i = 0; i < services.length; i++) {\n            total = total * services[i].service.sla / 100;\n        }\n\n        return Math.round(((total * 100) + Number.EPSILON) * 1000) / 1000;\n    }\n\n    calculateDownTime(sla) {\n        if (sla == 0)\n            return 0;\n\n        return Math.round((44640 * (1 - (sla / 100)) + Number.EPSILON) * 100) / 100;\n    }\n\n    selectService(eventInfo, selectedService) {\n        const sourceId = eventInfo.target.id;\n        if (sourceId === \"service-hl\")\n            return;\n\n        const service = this.state.selectedServices.find(o => o.name === selectedService);\n        const slaEstimation = [...this.state.slaEstimation];\n\n        const key = { id: this.state.slaEstimation.length, service: service, tier: this.state.currentTier}\n\n        slaEstimation.push({ id: this.state.slaEstimation.length, key: key, tier: this.state.currentTier });\n\n        const slaTotal = this.calculateSla(slaEstimation);\n        const downTime = this.calculateDownTime(slaTotal)\n\n        const slaTotalMultiRegion = this.calculateSlaMultiRegion(slaEstimation, this.state.tiers);\n        const downTimeMultiRegion = this.calculateDownTime(slaTotalMultiRegion)\n\n        this.setState({ addServiceClass: \"addservice-alert-visible\" });\n\n        setTimeout(() => {\n            this.setState({ addServiceClass: \"addservice-alert-hide\" });\n        }, 1000);\n\n        this.setState({\n            selectedService: selectedService,\n            slaEstimation: slaEstimation,\n            slaTotal: slaTotal,\n            downTime: downTime,\n            slaTotalMultiRegion: slaTotalMultiRegion,\n            downTimeMultiRegion: downTimeMultiRegion,\n        });\n\n        localStorage.setItem('slaEstimation', JSON.stringify(slaEstimation));\n    }\n\n    expandCollapseEstimationCategory(evt) {\n        var updownimage = evt.currentTarget;\n        var divPanel = evt.currentTarget.parentElement.parentElement.parentElement.children[2];\n        divPanel.className = divPanel.className === \"div-hide\" ? \"div-show\" : \"div-hide\";\n        updownimage.className = updownimage.className === \"up-arrow\" ? \"down-arrow\" : \"up-arrow\";\n    }\n\n    deleteEstimationCategory(evt) {\n        const category = evt.currentTarget.parentElement.id;\n        const tier = evt.currentTarget.parentElement.parentElement.id\n        const slaEstimation = [...this.state.slaEstimation];\n\n        const filteredEstimation = slaEstimation.filter(e => e.key.service.categoryName != category || e.tier != tier);\n\n        const slaTotal = this.calculateSla(filteredEstimation);\n        const downTime = this.calculateDownTime(slaTotal)\n\n        this.setState({\n            slaEstimation: filteredEstimation,\n            slaTotal: slaTotal,\n            downTime: downTime\n        });\n\n        localStorage.setItem('slaEstimation', JSON.stringify(filteredEstimation));\n    }\n\n    deleteEstimationService(evt) {\n        const service = evt.currentTarget.parentElement.id;\n        const tier = evt.currentTarget.parentElement.parentElement.parentElement.parentElement.id;\n        const slaEstimation = [...this.state.slaEstimation];\n        const category = evt.currentTarget.parentElement.parentElement.parentElement.parentElement.children[0].id;\n\n        var filteredEstimation = slaEstimation.filter(e => e.key.service.categoryName != category\n            || e.tier != tier\n            || e.key.service.name != service  );\n\n\n        const slaTotal = this.calculateSla(filteredEstimation);\n        const downTime = this.calculateDownTime(slaTotal)\n\n        this.setState({\n            slaEstimation: filteredEstimation,\n            slaTotal: slaTotal,\n            downTime: downTime\n        });\n\n        localStorage.setItem('slaEstimation', JSON.stringify(filteredEstimation));\n    }\n\n    setTier(evt) {\n        this.setState({\n            currentTier: evt.target.innerHTML\n        });\n    }\n\n    addTier(evt) {\n        const tierName = evt.currentTarget.parentElement.parentElement.children[2].children[0].value;\n\n        if (tierName.trim().length === 0)\n            return;\n\n        var tiers = [...this.state.tiers];\n        const tierFound = tiers.find(t => t.name == tierName)\n        if (tierFound === undefined) {\n            tiers = tiers.concat({ name: tierName, pairedRegion: 'no' });\n        }\n\n        this.setState({ tiers: tiers });\n        localStorage.setItem('tiers', JSON.stringify(tiers));\n        evt.currentTarget.parentElement.parentElement.children[2].children[0].value = \"\";\n    }\n\n    deleteTier(evt) {\n\n        if (window.confirm('If you delete this Tier, all the estimations that use it will be deleted as well, Are you sure you want to delete the Tier ? ', 'Delete Tier')) {\n\n            const tierName = evt.target.id;\n            const tiers = [...this.state.tiers];\n            const filteredTiers = tiers.filter(t => t.name != tierName);\n\n            this.setState({\n                tiers: filteredTiers\n            });\n\n            const slaEstimation = [...this.state.slaEstimation];\n\n            const filteredEstimation = slaEstimation.filter(e => e.tier != tierName);\n\n            const slaTotal = this.calculateSla(filteredEstimation);\n            const downTime = this.calculateDownTime(slaTotal)\n\n            this.setState({\n                tiers: filteredTiers,\n                slaEstimation: filteredEstimation,\n                slaTotal: slaTotal,\n                downTime: downTime\n            });\n\n            localStorage.setItem('slaEstimation', JSON.stringify(filteredEstimation));\n            localStorage.setItem('tiers', JSON.stringify(filteredTiers));\n        }\n    }\n\n    selectTierRegion(evt) {\n        const regionOption = evt.target.options[evt.target.selectedIndex].value;\n        const tier = evt.target.id;\n\n        const tiers = [...this.state.tiers];\n        var index = tiers.findIndex(t => t.name === tier);\n        tiers[index].pairedRegion = regionOption;\n\n        this.setState({\n            tiers: tiers\n        });\n\n        const slaTotalMultiRegion = this.calculateSlaMultiRegion(this.state.slaEstimation, tiers)\n        const downTimeMultiRegion = this.calculateDownTime(slaTotalMultiRegion)\n\n        this.setState({\n            slaTotalMultiRegion: slaTotalMultiRegion,\n            downTimeMultiRegion: downTimeMultiRegion,\n        });\n\n        localStorage.setItem('tiers', JSON.stringify(tiers));\n    }\n\n    expandCollapseEstimationTier(evt) {\n        var updownimage = evt.currentTarget;\n        var divPanel = evt.currentTarget.parentElement\n            .parentElement.parentElement.children[1];\n\n        var totalsPanel = evt.currentTarget.parentElement\n            .parentElement.parentElement.children[2];\n\n        divPanel.className = divPanel.className === \"tier-hide\" ? \"tier-show\" : \"tier-hide\";\n        totalsPanel.className = totalsPanel.className === \"tier-hide\" ? \"tier-show\" : \"tier-hide\";\n        updownimage.className = updownimage.className === \"up-arrow\" ? \"down-arrow\" : \"up-arrow\";\n\n    }\n\n    deleteEstimationTier(evt) {\n        const tierName = evt.target.parentElement.id;\n        const slaEstimation = [...this.state.slaEstimation];\n\n        const filteredEstimation = slaEstimation.filter(e => e.tier != tierName);\n\n        const slaTotal = this.calculateSla(filteredEstimation);\n        const downTime = this.calculateDownTime(slaTotal)\n\n        const tiers = [...this.state.tiers];\n        var index = tiers.findIndex(t => t.name === tierName);\n        tiers[index].pairedRegion = 'no';\n\n        this.setState({\n            tiers: tiers,\n            slaEstimation: filteredEstimation,\n            slaTotal: slaTotal,\n            downTime: downTime\n        });\n\n        localStorage.setItem('slaEstimation', JSON.stringify(filteredEstimation));\n    }\n\n    deleteAll() {\n\n        const tiers = this.getResetTiers();\n\n        this.setState({\n            slaEstimation: [],\n            slaTotal: 0,\n            downTime: 0,\n            slaTotalMultiRegion: 0,\n            downTimeMultiRegion: 0,\n            tiers: tiers\n        });\n\n        localStorage.setItem('slaEstimation', JSON.stringify([]));\n    }\n\n    expandAll(evt) {\n        var divPanel = evt.currentTarget.parentElement.parentElement.children[2];\n        divPanel.className = \"tiers-panel-show\";\n    }\n\n    collapseAll(evt) {\n        var divPanel = evt.currentTarget.parentElement.parentElement.children[2];\n        divPanel.className = \"tiers-panel-hide\";\n    }\n\n    componentDidMount() {\n        this.populateServiceCategoryData();\n    }\n\n    renderMainPanel() {\n        return (\n            <div className=\"main-panel\">\n                <div className=\"top-panel\">\n                    <div className=\"top-title\">\n                        <h1 className=\"top-title-inner\">SLA Estimator</h1>\n                        <p className=\"top-title-inner-sub\">Estimate the overall service level agreement of your services</p>\n                    </div>\n                    <div className=\"legal-site-spacer\"></div>\n                    <a href=\"https://azure.microsoft.com/support/legal/sla/\" target=\"_blank\">Click here the to see the full SLA description hosted on the Legal site.</a>\n                    <div className=\"search-container\">\n                        <SearchBar onTextSearchEnter={this.searchTextEnter} onClearSearch={this.clearSearch} />\n                    </div>\n                    <div className=\"tier-container\">\n                        <div className=\"tier-option-div\">\n                            <TiersDropDownMenu tiers={this.state.tiers} currentTier={this.state.currentTier}\n                                onChangeTier={this.setTier}\n                                onDeleteTier={this.deleteTier}\n                                onAddTier={this.addTier}/>\n                        </div>\n                    </div>\n                    <ServiceAlert id=\"serviceAlert\" className={this.state.addServiceClass} />\n                    <div className=\"layout-parent-div\">\n                        <div className={!this.state.filter ? \"layout-div-left\" : \"div-hide\"}>\n                            <Navigation visible={!this.state.filter} dataSource={this.state.serviceCategories} selectedCategory={this.state.selectedCategory} onSelectCategory={this.selectCategory} />\n                        </div>\n                        <div className={this.state.filter ? \"layout-div-center\" : \"layout-div-right\"}>\n                            <Services dataSource={this.state.selectedServices} onSelectService={this.selectService} />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"sla-estimation-panel\">\n                    <SLAestimation slaEstimationData={this.state.slaEstimation}\n                        tier={this.state.currentTier}\n                        tiers={this.state.tiers}\n                        onDeleteEstimationCategory={this.deleteEstimationCategory}\n                        onDeleteEstimationService={this.deleteEstimationService}\n                        onExpandCollapseEstimationCategory={this.expandCollapseEstimationCategory}\n                        onDeleteEstimationTier={this.deleteEstimationTier}\n                        onExpandCollapseEstimationTier={this.expandCollapseEstimationTier}\n                        onDeleteAll={this.deleteAll}\n                        onExpandAll={this.expandAll}\n                        onCollapseAll={this.collapseAll}\n                        onSelectTierRegion={this.selectTierRegion}\n                        calculateTierSla={this.calculateTierSla}\n                        calculateDownTime={this.calculateDownTime}\n                        categories={this.state.categories}\n                        slaTotal={this.state.slaTotal}\n                        downTime={this.state.downTime}\n                        slaTotalMultiRegion={this.state.slaTotalMultiRegion}\n                        downTimeMultiRegion={this.state.downTimeMultiRegion}\n                    />\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        let contents = this.renderMainPanel();\n\n        return (\n            <div>\n                {contents}\n            </div>\n        );\n    }\n\n    async populateServiceCategoryData() {\n        //const response = await fetch('servicecategory');\n        //const data = await response.json();\n        const data = sladata\n\n        const allservices = data.map(x => x.services).reduce(\n            (x, y) => x.concat(y));\n\n        this.setState({ serviceCategories: data, allservices, selectedServices: data[0].services, categories: data.map(x => x.categoryName),selectedCategory: data[0].categoryName, loading: false });\n    }\n}\n","import React, { Component } from 'react';\n\nexport class Home extends Component {\n  static displayName = Home.name;\n\n  render () {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Route } from 'react-router';\nimport { MainPanel } from './components/MainPanel';\nimport { Home } from './components/Home';\nimport { Navigation } from './components/Navigation';\nimport { Services } from './components/Services';\n\n\nimport './custom.css'\n\nexport default class App extends Component {\n  static displayName = App.name;\n\n  render () {\n    return (\n        <MainPanel>\n        <Route exact path='/' component={Home} />\n            <Route path='/navigation' component={Navigation} />\n            <Route path='/services' component={Services} />\n        </MainPanel>\n    );\n  }\n}\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n  // [::1] is the IPv6 localhost address.\n  window.location.hostname === '[::1]' ||\n  // 127.0.0.1/8 is considered localhost for IPv4.\n  window.location.hostname.match(\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n  )\n);\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>,\n  rootElement);\n\nregisterServiceWorker();\n\n"],"sourceRoot":""}